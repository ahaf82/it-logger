{"version":3,"sources":["actions/logActions.js","actions/types.js","components/layout/SearchBar.js","components/logs/LogItem.js","components/layout/Preloader.js","components/logs/Logs.js","components/layout/AddBtn.js","actions/techActions.js","components/techs/TechSelectOptions.js","components/techs/AddTechName.js","components/logs/AddLogModal.js","components/logs/EditLogModal.js","components/techs/TechItem.js","components/techs/TechListModal.js","reducers/logReducer.js","reducers/techReducer.js","reducers/index.js","store.js","App.js","index.js"],"names":["setLoading","type","connect","searchLogs","text","dispatch","a","fetch","res","json","data","payload","response","statusText","useRef","style","marginBottom","className","id","placeholder","ref","onChange","e","current","value","htmlFor","deleteLog","_id","method","setCurrent","log","href","attention","onClick","message","tech","format","date","M","toast","html","Preloader","state","getLogs","logs","loading","useEffect","length","map","key","AddBtn","getTechs","techs","t","firstName","lastName","modalStyle","width","height","addTech","body","JSON","stringify","headers","useState","setFirstName","setLastName","name","target","addLog","setMessage","setAttention","setTech","disabled","checked","newLog","Date","updateLog","updLog","deleteTech","intitialState","error","initialState","combineReducers","action","filter","console","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","AutoInit","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b65d62f7.chunk.js","sourcesContent":["import {\r\n    GET_LOGS,\r\n    SET_LOADING,\r\n    LOGS_ERROR,\r\n    ADD_LOG,\r\n    CLEAR_CURRENT,\r\n    UPDATE_LOG,\r\n    SEARCH_LOGS,\r\n    DELETE_LOG,\r\n    SET_CURRENT\r\n} from './types';\r\n\r\n// export const getLogs = () => {\r\n//     return async(dispatch) => {\r\n//         setLoading();\r\n\r\n//         const res = await fetch('/logs');\r\n//         const data = await res.json();\r\n\r\n//         dispatch({\r\n//             type: GET_LOGS,\r\n//             payload: data\r\n//         })\r\n//     }\r\n// }\r\n\r\n\r\n// Get logs from server\r\nexport const getLogs = () => async dispatch => {\r\n    try {\r\n        setLoading();\r\n\r\n        const res = await fetch('/logs');\r\n        const data = await res.json();\r\n\r\n        dispatch({\r\n            type: GET_LOGS,\r\n            payload: data\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: LOGS_ERROR,\r\n            payload: err.response.statusText\r\n        });\r\n\r\n    }\r\n}\r\n\r\n// Add new log\r\nexport const addLog = (log) => async dispatch => {\r\n    try {\r\n        setLoading();\r\n\r\n        const res = await fetch('/logs', {\r\n            method: 'POST',\r\n            body: JSON.stringify(log),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n        const data = await res.json();\r\n\r\n        dispatch({\r\n            type: ADD_LOG,\r\n            payload: data\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: LOGS_ERROR,\r\n            payload: err.response.statusText\r\n        });\r\n    }\r\n}\r\n\r\n// Delete log from server\r\nexport const deleteLog = (_id) => async dispatch => {\r\n    try {\r\n        setLoading();\r\n\r\n        await fetch(`/logs/${_id}`, {\r\n            method: 'DELETE'\r\n        });\r\n\r\n        dispatch({\r\n            type: DELETE_LOG,\r\n            payload: _id\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: LOGS_ERROR,\r\n            payload: err.response.statusText\r\n        });\r\n\r\n    }\r\n}\r\n\r\n// Update log on server\r\nexport const updateLog = (log) => async dispatch => {\r\n    try {\r\n        setLoading();\r\n\r\n        const res = await fetch(`/logs/${log._id}`, {\r\n            method: 'PUT',\r\n            body: JSON.stringify(log),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n\r\n        const data = await res.json();\r\n\r\n        dispatch({\r\n            type: UPDATE_LOG,\r\n            payload: data\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: LOGS_ERROR,\r\n            payload: err.response.statusText\r\n        });\r\n\r\n    }\r\n\r\n}\r\n\r\n// Search server logs\r\nexport const searchLogs = (text) => async dispatch => {\r\n    try {\r\n        setLoading();\r\n\r\n        const res = await fetch(`/logs?q=${text}`);\r\n        const data = await res.json();\r\n\r\n        dispatch({\r\n            type: SEARCH_LOGS,\r\n            payload: data\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: LOGS_ERROR,\r\n            payload: err.response.statusText\r\n        });\r\n\r\n    }\r\n}\r\n\r\n// Set current log\r\nexport const setCurrent = log => {\r\n    return {\r\n        type: SET_CURRENT,\r\n        payload: log\r\n    };\r\n}\r\n\r\n// Clear current log\r\nexport const clearCurrent = () => {\r\n    return {\r\n        type: CLEAR_CURRENT\r\n    };\r\n}\r\n\r\n// Set loading to true\r\nexport const setLoading = () => {\r\n    return {\r\n        type: SET_LOADING\r\n    };\r\n}","export const GET_LOGS = 'GET_LOGS';\r\nexport const ADD_LOG = 'ADD_LOG';\r\nexport const DELETE_LOG = 'DELETE_LOG';\r\nexport const SET_CURRENT = 'SET_CURRENT';\r\nexport const CLEAR_CURRENT = 'CLEAR_CURRENT';\r\nexport const UPDATE_LOG = 'UPDATE_LOG';\r\nexport const CLEAR_LOGS = 'CLEAR_LOGS';\r\nexport const SET_LOADING = 'SET_LOADING';\r\nexport const LOGS_ERROR = 'LOGS_ERROR';\r\nexport const SEARCH_LOGS = 'SEARCH_LOGS';\r\nexport const GET_TECHS = 'GET_TECHS';\r\nexport const ADD_TECH = 'ADD_TECH';\r\nexport const DELETE_TECH = 'DELETE_TECH';\r\nexport const TECHS_ERROR = 'TECHS-ERROR';","import React, { useRef } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { searchLogs } from '../../actions/logActions';\r\n\r\nconst SearchBar = ({ searchLogs }) => {\r\n    const text = useRef('');\r\n\r\n    const onChange = e => {\r\n        searchLogs(text.current.value)\r\n    }\r\n\r\n    return (\r\n        <nav style={{ marginBottom: '30px' }} className=\"blue\">\r\n            <div className=\"nav-wrapper\">\r\n                <form>\r\n                    <div className=\"input-field\">\r\n                        <input id=\"search\" type=\"search\" placeholder='Search Logs..' ref={text} onChange={onChange} />\r\n                        <label className=\"label-icon\" htmlFor=\"search\"><i className=\"material-icons\">search</i></label>\r\n                        <i className=\"material-icons\">close</i>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nSearchBar.propTypes = {\r\n    searchLogs: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { searchLogs })(SearchBar);\r\n","import React from 'react';\r\nimport Moment from 'react-moment';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { deleteLog, setCurrent } from '../../actions/logActions';\r\n\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\n\r\nconst LogItem = ({ log, deleteLog, setCurrent }) => {\r\n    const onDelete = () => {\r\n        deleteLog(log._id);\r\n        M.toast({ html: 'Log Deleted' })\r\n    }\r\n\r\n    return (\r\n        <li className=\"collection-item \">\r\n            <div>\r\n                <a href='#edit-log-modal' className={`modal-trigger ${log.attention ? 'red-text' : 'blue-text'}`} onClick={() => setCurrent(log)}>{log.message}</a>\r\n                <br />\r\n                <span className='grey-text'>\r\n                    <span className=\"black-text\">ID #{log._id}</span> last updated by <span className=\"black-text\">{log.tech}</span> on <Moment format='MMMM Do YYYY, h:mm:ss a'>{log.date}</Moment>\r\n                </span>\r\n                <a href=\"#!\" onClick={onDelete} className=\"secondary-content\">\r\n                    <i className=\"material-icons grey-text\">delete</i>\r\n                </a>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nLogItem.propTypes = {\r\n    log: PropTypes.object.isRequired,\r\n    deleteLog: PropTypes.func.isRequired,\r\n    setCurrent: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, { deleteLog, setCurrent })(LogItem);\r\n\r\n","import React from 'react';\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div className='progress blue lighten-4'>\r\n            <div className=\"indeterminate blue\"></div>            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader;","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport LogItem from './LogItem';\r\nimport Preloader from '../layout/Preloader';\r\nimport PropTypes from 'prop-types';\r\nimport { getLogs } from '../../actions/logActions'\r\n\r\nconst Logs = ({ log: { logs, loading }, getLogs }) => {\r\n\r\n    useEffect(() => {\r\n        getLogs();\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    if (loading || logs === null) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <ul className='collection-with-header'>\r\n            <li className='collection-header'>\r\n                <h4 className='center'>System Logs</h4>\r\n            </li>\r\n            {!loading && logs.length === 0 ? (\r\n                <p className='center'>No logs to show</p>\r\n            ) : (\r\n                    logs.map(log => <LogItem log={log} key={log._id} />)\r\n                )}\r\n        </ul>\r\n    )\r\n}\r\n\r\nLogs.propTypes = {\r\n    log: PropTypes.object.isRequired,\r\n    getLogs: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    log: state.log\r\n});\r\n\r\nexport default connect(mapStateToProps, { getLogs })(Logs);\r\n","import React from 'react';\r\n\r\nconst AddBtn = () => {\r\n    return (\r\n        <div className=\"fixed-action-btn\">\r\n            <a href=\"#add-log-modal\" className=\"btn-floating btn-large blue darken-2 modal-trigger\">\r\n                <i className=\"large material-icons\">add</i>\r\n            </a>\r\n            <ul>\r\n                <li>\r\n                    <a href=\"#tech-list-modal\" className=\"btn-floating green modal-trigger\">\r\n                        <i className=\"material-icons\">person</i>\r\n                    </a>\r\n                </li>\r\n                <li>\r\n                    <a href=\"#add-tech-modal\" className=\"btn-floating red modal-trigger\">\r\n                        <i className=\"material-icons\">person_add</i>\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddBtn;\r\n","import {\r\n    GET_TECHS,\r\n    ADD_TECH,\r\n    DELETE_TECH,\r\n    SET_LOADING,\r\n    TECHS_ERROR\r\n} from './types';\r\n\r\n// Get techs from server\r\nexport const getTechs = () => async dispatch => {\r\n    try {\r\n        setLoading();\r\n\r\n        const res = await fetch('/techs');\r\n        const data = await res.json();\r\n\r\n        dispatch({\r\n            type: GET_TECHS,\r\n            payload: data\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: TECHS_ERROR,\r\n            payload: err.response.statusText\r\n        });\r\n\r\n    }\r\n}\r\n\r\n// Add technician to server\r\nexport const addTech = (tech) => async dispatch => {\r\n    try {\r\n        setLoading();\r\n\r\n        const res = await fetch('/techs', {\r\n            method: 'POST',\r\n            body: JSON.stringify(tech),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n        const data = await res.json();\r\n\r\n        dispatch({\r\n            type: ADD_TECH,\r\n            payload: data\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: TECHS_ERROR,\r\n            payload: err.response.statusText\r\n        });\r\n\r\n    }\r\n}\r\n\r\n// Delete techs from server\r\nexport const deleteTech = (_id) => async dispatch => {\r\n    try {\r\n        setLoading();\r\n\r\n        const res = await fetch(`/techs/${_id}`, {\r\n            method: 'DELETE'\r\n        });\r\n\r\n        dispatch({\r\n            type: DELETE_TECH,\r\n            payload: _id\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: TECHS_ERROR,\r\n            payload: err.response.statusText\r\n        });\r\n\r\n    }\r\n}\r\n\r\n// Set loading to true\r\nexport const setLoading = () => {\r\n    return {\r\n        type: SET_LOADING\r\n    };\r\n}","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { getTechs } from '../../actions/techActions';\r\n\r\nconst TechSelectOptions = ({ getTechs, tech: { techs, loading } }) => {\r\n    useEffect(() => {\r\n        getTechs();\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    return (\r\n        !loading && techs !== null && techs.map(t => (<option key={t.id} value={`${t.firstName} ${t.lastName}`}>\r\n            {t.firstName} {t.lastName}\r\n        </option>)\r\n        )\r\n    );\r\n}\r\n\r\nTechSelectOptions.propTypes = {\r\n    tech: PropTypes.object.isRequired,\r\n    getTechs: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    tech: state.tech\r\n});\r\n\r\nexport default connect(mapStateToProps, { getTechs })(TechSelectOptions)\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { addTech } from '../../actions/techActions';\r\nimport M from 'materialize-css/dist/js/materialize.min.js'\r\n\r\nconst AddTechModal = ({ addTech }) => {\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n\r\n    const onSubmit = () => {\r\n        if (firstName === '' || lastName === '') {\r\n            M.toast({ html: 'Please enter a first and last name' })\r\n        }\r\n        addTech({\r\n            firstName,\r\n            lastName\r\n        });\r\n\r\n        M.toast({ html: `${firstName} ${lastName} was added as a tech` })\r\n\r\n        setFirstName('');\r\n        setLastName('');\r\n    }\r\n\r\n    return <div id=\"add-tech-modal\" className=\"modal\" style={modalStyle}>\r\n        <div className=\"modal-content\">\r\n            <h4>Enter Technician</h4>\r\n            <div className=\"row\">\r\n                <div className=\"input-field\">\r\n                    <input type=\"text\" name=\"firstName\" value={firstName} onChange={e => setFirstName(e.target.value)} />\r\n                </div>\r\n                <label htmlFor=\"firstName\" className=\"active\">\r\n                    First Name\r\n                </label>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"input-field\">\r\n                    <input type=\"text\" name=\"lastName\" value={lastName} onChange={e => setLastName(e.target.value)} />\r\n                </div>\r\n                <label htmlFor=\"lastName\" className=\"active\">\r\n                    Last Name\r\n                </label>\r\n            </div>\r\n        </div>\r\n        <div className=\"modal-footer\">\r\n            <a href=\"#!\" onClick={onSubmit} className=\"modal-close waves-effect waves-ligthen blue btn\">Enter</a>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst modalStyle = {\r\n    width: '75%',\r\n    height: '75%'\r\n}\r\n\r\nAddTechModal.propTypes = {\r\n    addTech: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, { addTech })(AddTechModal);\r\n","import { addLog } from '../../actions/logActions';\r\nimport TechSelectOptions from '../techs/TechSelectOptions';\r\nimport React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport M from 'materialize-css/dist/js/materialize.min.js'\r\nimport AddTechModal from '../techs/AddTechName';\r\n\r\nconst AddLogModal = ({ addLog }) => {\r\n    const [message, setMessage] = useState('');\r\n    const [attention, setAttention] = useState(false);\r\n    const [tech, setTech] = useState('');\r\n\r\n    const onSubmit = () => {\r\n        if (message === '' || tech === '') {\r\n            M.toast({ html: 'Please enter a message and a tech' })\r\n        }\r\n        const newLog = {\r\n            message,\r\n            attention,\r\n            tech,\r\n            date: new Date()\r\n        }\r\n\r\n        addLog(newLog);\r\n\r\n        M.toast({ html: `Log added by ${tech}` });\r\n\r\n        setMessage('');\r\n        setAttention(false);\r\n        setTech('');\r\n    }\r\n\r\n    return <div id=\"add-log-modal\" className=\"modal\" style={modalStyle}>\r\n        <div className=\"modal-content\">\r\n            <h4>Enter System Log</h4>\r\n            <div className=\"row\">\r\n                <div className=\"input-field\">\r\n                    <input type=\"text\" name=\"message\" value={message} onChange={e => setMessage(e.target.value)} />\r\n                </div>\r\n                <label htmlFor=\"message\" className=\"active\">\r\n                    Log Message\r\n                </label>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"input-field\">\r\n                    <select name=\"tech\" value={tech} className=\"browser-default\" onChange={e => setTech(e.target.value)}>\r\n                        <option value=\"\" disabled>\r\n                            Select Technician\r\n                        </option>\r\n                        <TechSelectOptions />\r\n                    </select>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <p>\r\n                    <label>\r\n                        <input type=\"checkbox\" className='filled-in' checked={attention} value={attention} onChange={e => setAttention(!attention)} />\r\n                        <span>Need Attention</span>\r\n                    </label>\r\n                </p>\r\n            </div>\r\n        </div>\r\n        <div className=\"modal-footer\">\r\n            <a href=\"#!\" onClick={onSubmit} className=\"modal-close waves-effect waves-ligthen blue btn\">Enter</a>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nAddLogModal.propTypes = {\r\n    addLog: PropTypes.func.isRequired\r\n}\r\n\r\nconst modalStyle = {\r\n    width: '75%',\r\n    height: '75%'\r\n}\r\n\r\nexport default connect(null, { addLog })(AddLogModal);\r\n","import React, { useState, useEffect } from 'react';\r\nimport TechSelectOptions from '../techs/TechSelectOptions';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\nimport { updateLog } from '../../actions/logActions';\r\n\r\nconst EditLogModal = ({ current, updateLog }) => {\r\n    const [message, setMessage] = useState('');\r\n    const [attention, setAttention] = useState(false);\r\n    const [tech, setTech] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (current) {\r\n            setMessage(current.message);\r\n            setAttention(current.attention);\r\n            setTech(current.tech);\r\n        }\r\n    }, [current])\r\n\r\n    const onSubmit = () => {\r\n        if (message === '' || tech === '') {\r\n            M.toast({ html: 'Please enter a message and a tech' })\r\n        } else {\r\n            const updLog = {\r\n                _id: current._id,\r\n                message,\r\n                tech,\r\n                attention,\r\n                date: new Date()\r\n            }\r\n\r\n            updateLog(updLog);\r\n            M.toast({ html: `Log updated by ${tech}` });\r\n\r\n            // Clear fields\r\n            setMessage('');\r\n            setAttention(false);\r\n            setTech('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div id=\"edit-log-modal\" className=\"modal\" style={modalStyle}>\r\n            <div className=\"modal-content\">\r\n                <h4>Enter System Log</h4>\r\n                <div className=\"row\">\r\n                    <div className=\"input-field\">\r\n                        <input type=\"text\" name=\"message\" value={message} onChange={e => setMessage(e.target.value)} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"input-field\">\r\n                        <select name=\"tech\" value={tech} className=\"browser-default\" onChange={e => setTech(e.target.value)}>\r\n                            <option value=\"\" disabled>\r\n                                Select Technician\r\n                        </option>\r\n                            <TechSelectOptions />\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <p>\r\n                        <label>\r\n                            <input type=\"checkbox\" className='filled-in' checked={attention} value={attention} onChange={e => setAttention(!attention)} />\r\n                            <span>Need Attention</span>\r\n                        </label>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n                <a href=\"#!\" onClick={onSubmit} className=\"modal-close waves-effect waves-ligthen blue btn\">Enter</a>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst modalStyle = {\r\n    width: '75%',\r\n    height: '75%'\r\n};\r\n\r\nEditLogModal.propTypes = {\r\n    current: PropTypes.object,\r\n    updateLog: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    current: state.log.current\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, { updateLog })(EditLogModal);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { deleteTech } from '../../actions/techActions';\r\nimport M from 'materialize-css/dist/js/materialize.min.js'\r\n\r\nconst TechItem = ({ tech: { _id, firstName, lastName }, deleteTech }) => {\r\n    const onDelete = () => {\r\n        deleteTech(_id);\r\n        M.toast({ html: 'Technician deleted' })\r\n    }\r\n\r\n    return (\r\n        <li className='collection-item'>\r\n            <div>\r\n                {firstName} {lastName}\r\n                <a href=\"!#\" className='secondary-content' onClick={onDelete}>\r\n                    <i className=\"material-icons grey-text\">delete</i>\r\n                </a>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nTechItem.propTypes = {\r\n    tech: PropTypes.object.isRequired,\r\n    deleteTech: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, { deleteTech })(TechItem);\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport TechItem from './TechItem';\r\nimport { getTechs } from '../../actions/techActions';\r\n\r\nconst TechListModal = ({ getTechs, tech: { techs, loading } }) => {\r\n    useEffect(() => {\r\n        getTechs();\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    return (\r\n        <div id='tech-list-modal' className='modal'>\r\n            <div className=\"modal-content\">\r\n                <h4>Technician List</h4>\r\n                <ul className=\"collection\">\r\n                    {!loading && techs !== null && techs.map(tech => (\r\n                        <TechItem tech={tech} key={tech._id} />\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nTechListModal.propTypes = {\r\n    tech: PropTypes.object.isRequired,\r\n    getTechs: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    tech: state.tech\r\n});\r\n\r\nexport default connect(mapStateToProps, { getTechs })(TechListModal);\r\n","import {\r\n    GET_LOGS,\r\n    SET_LOADING,\r\n    LOGS_ERROR,\r\n    ADD_LOG,\r\n    DELETE_LOG,\r\n    UPDATE_LOG,\r\n    SEARCH_LOGS,\r\n    SET_CURRENT,\r\n    CLEAR_CURRENT\r\n} from '../actions/types';\r\n\r\nconst intitialState = {\r\n    logs: null,\r\n    current: null,\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport default (state = intitialState, action) => {\r\n    switch (action.type) {\r\n        case GET_LOGS:\r\n            return {\r\n                ...state,\r\n                logs: action.payload,\r\n                loading: false\r\n            }\r\n        case ADD_LOG:\r\n            return {\r\n                ...state,\r\n                logs: [...state.logs, action.payload],\r\n                loading: false\r\n            }\r\n        case DELETE_LOG:\r\n            return {\r\n                ...state,\r\n                logs: state.logs.filter(log => log._id !== action.payload),\r\n                loading: false\r\n            }\r\n        case UPDATE_LOG:\r\n            return {\r\n                ...state,\r\n                logs: state.logs.map(log => log._id === action.payload._id ? action.payload : log)\r\n            }\r\n        case SEARCH_LOGS:\r\n            return {\r\n                ...state,\r\n                logs: action.payload\r\n            }\r\n        case SET_CURRENT:\r\n            return {\r\n                ...state,\r\n                current: action.payload\r\n            }\r\n        case CLEAR_CURRENT:\r\n            return {\r\n                ...state,\r\n                current: null\r\n            }\r\n        case SET_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case LOGS_ERROR:\r\n            console.error(action.payload);\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    GET_TECHS,\r\n    ADD_TECH,\r\n    DELETE_TECH,\r\n    SET_LOADING,\r\n    TECHS_ERROR\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    techs: null,\r\n    loading: false,\r\n    error: null\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_TECHS:\r\n            return {\r\n                ...state,\r\n                techs: action.payload,\r\n                loading: false\r\n            };\r\n        case ADD_TECH:\r\n            return {\r\n                ...state,\r\n                techs: [...state.techs, action.payload],\r\n                loading: false\r\n            }\r\n        case DELETE_TECH:\r\n            return {\r\n                ...state,\r\n                techs: state.techs.filter(tech => tech._id !== action.payload),\r\n                loading: false\r\n            }\r\n        case SET_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case TECHS_ERROR:\r\n            console.error(action.payload);\r\n            return {\r\n                ...state,\r\n                error: action.payload,\r\n                loading: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport logReducer from './logReducer';\r\nimport techReducer from './techReducer';\r\n\r\nexport default combineReducers({\r\n    log: logReducer,\r\n    tech: techReducer\r\n});","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;","import React, { Fragment, useEffect } from 'react';\nimport SearchBar from './components/layout/SearchBar';\nimport Logs from './components/logs/Logs';\nimport AddBtn from './components/layout/AddBtn';\nimport AddLogModal from './components/logs/AddLogModal';\nimport EditLogModal from './components/logs/EditLogModal';\nimport AddTechModal from './components/techs/AddTechName';\nimport TechListModal from './components/techs/TechListModal';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nimport 'materialize-css/dist/css/materialize.min.css';\nimport M from 'materialize-css/dist/js/materialize.min.js';\nimport './App.css';\n\nconst App = () => {\n  useEffect(() => {\n    // Initializes Materialize JS\n    M.AutoInit();\n  });\n\n  return (\n    <Provider store={store}>\n      <Fragment>\n        <SearchBar />\n        <div className=\"container\">\n          <AddBtn />\n          <AddLogModal />\n          <EditLogModal />\n          <AddTechModal />\n          <TechListModal />\n          <Logs />\n        </div>\n      </Fragment>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}